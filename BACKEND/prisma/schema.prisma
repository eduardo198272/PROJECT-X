generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int      @id @default(autoincrement())
  name           String
  email          String   @unique
  password_hash  String
  address        String
  phone          String?
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt
  orders         Order[]
  reviews        Review[]
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  price       Float
  category_id Int
  image       String?  
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  category    Category @relation(fields: [category_id], references: [id])
  order_items OrderItem[]
  reviews     Review[]
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String
  parent_id   Int?     // Removido o `@unique`
  parent      Category? @relation("CategoryParent", fields: [parent_id], references: [id])
  children    Category[] @relation("CategoryParent")
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  products    Product[]
}

model Order {
  id          Int      @id @default(autoincrement())
  user_id     Int
  total_amount Float
  status      String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  user        User     @relation(fields: [user_id], references: [id])
  order_items OrderItem[]
  payment     Payment?
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  order_id  Int
  product_id Int
  quantity  Int
  price     Float
  order     Order   @relation(fields: [order_id], references: [id])
  product   Product @relation(fields: [product_id], references: [id])
}

model Payment {
  id             Int      @id @default(autoincrement())
  order_id       Int      @unique 
  payment_date   DateTime
  amount         Float
  payment_method String
  status         String
  order          Order    @relation(fields: [order_id], references: [id])
}

model Review {
  id          Int     @id @default(autoincrement())
  user_id     Int
  product_id  Int
  rating      Int
  comment     String?
  created_at  DateTime @default(now())
  user        User     @relation(fields: [user_id], references: [id])
  product     Product  @relation(fields: [product_id], references: [id])
}
